{"remainingRequest":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/vue-loader/lib/index.js??ref--1-1!/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/andre/repositories/openhardwareleaders/ohlwebsite/docs/Program/04_community.md?vue&type=template&id=0663cf96&","dependencies":[{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/docs/Program/04_community.md","mtime":1580829446349},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoiY29tbXVuaXR5LWd1aWRlbGluZXMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNjb21tdW5pdHktZ3VpZGVsaW5lcyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBDb21tdW5pdHkgR3VpZGVsaW5lcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoaXMgbWVudG9yc2hpcCBwcm9ncmFtIGFpbXMgdG8gY3JlYXRlIGEgZGl2ZXJzZSwgZ2xvYmFsIGNvbW11bml0eSB3b3JraW5nIHRvIGVuaGFuY2UgdGhlIHNoYXJpbmcgb2Ygb3BlbiBoYXJkd2FyZS4gQmVjYXVzZSBvZiB0aGlzIGRpdmVyc2l0eSwgaXQgaXMgaW1wb3J0YW50IHRvIGJlIGludGVudGlvbmFsIGFib3V0IHByb3ZpZGluZyByZXNwZWN0ZnVsLCBlcXVpdGFibGUgc3BhY2VzIOKAlCBib3RoIG9ubGluZSBhbmQgaW4gcGVyc29uIOKAlCBmb3Igb3VyIGNvbW11bml0eSB0byBjb21lIHRvZ2V0aGVyIGFuZCBlbmdhZ2UgaW4gIiksX2MoJ3N0cm9uZycsW192bS5fdigiY29uc3RydWN0aXZlLCByZXNwZWN0ZnVsIGRpc2NvdXJzZS4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSBmb2xsb3dpbmcgZ3VpZGVsaW5lcyBhcmUgaW5zcGlyZWQgYnkgdGhlIGV4cGVyaWVuY2Ugb2YgdGhlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9vcGVuaGFyZHdhcmUuc2NpZWNlIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJHYXRoZXJpbmcgZm9yIE9wZW4gU2NpZW5jZSBIYXJkd2FyZSAoR09TSCkiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIGNvbW11bml0eS4gSXQgYXBwbGllcyB0byBhbGwgc3BhY2VzIHdoZXJlIHRoZSBtZW50b3JzaGlwIHByb2dyYW0gaXMgcnVuLCBib3RoIG9ubGluZSBhbmQgaW4gcGVyc29uLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkluZGl2aWR1YWxzIHdobyB2aW9sYXRlIHRoaXMgQ29kZSBtYXkgYWZmZWN0IHRoZWlyIGFiaWxpdHkgdG8gcGFydGljaXBhdGUgaW4gdGhlIHByb2dyYW0sIHJhbmdpbmcgZnJvbSB0ZW1wb3JhcmlseSBiZWluZyBwbGFjZWQgaW50byBvbmxpbmUgbW9kZXJhdGlvbiB0bywgYXMgYSBsYXN0IHJlc29ydCwgZXhwdWxzaW9uIGZyb20gdGhlIGNvbW11bml0eSBvciBpbi1wZXJzb24gZXZlbnRzLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkFueW9uZSByZXF1ZXN0ZWQgdG8gc3RvcCBiZWhhdmlvciB0aGF0IHZpb2xhdGVzIHRoZSBDb2RlIG9mIENvbmR1Y3QgaXMgZXhwZWN0ZWQgdG8gY29tcGx5IGltbWVkaWF0ZWx5LCBldmVuIGlmIHRoZXkgZGlzYWdyZWUgd2l0aCB0aGUgcmVxdWVzdC4gVGhlIG9yZ2FuaXplcnMgcmVzZXJ2ZSB0aGUgcmlnaHQgdG8gaW50ZXJydXB0IHBhcnRpY2lwYXRpb24gaW4gdGhlIHByb2dyYW0gYmFzZWQgb24gQ29DIHZpb2xhdGlvbnMuIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiZ2VuZXJhbC1wcmluY2lwbGVzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZ2VuZXJhbC1wcmluY2lwbGVzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEdlbmVyYWwgcHJpbmNpcGxlcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJXZSBzdHJpdmUgdG8gbWFrZSBvcGVuIGhhcmR3YXJlIG9wZW4gdG8gZXZlcnlib2R5LCByZWdhcmRsZXNzIG9mIHNjaG9sYXJseSBvciBwcm9mZXNzaW9uYWwgYmFja2dyb3VuZCwgZ2VuZGVyIGlkZW50aXR5IGFuZCBleHByZXNzaW9uLCBzZXh1YWwgb3JpZW50YXRpb24sIGFiaWxpdHksIHBoeXNpY2FsIGFwcGVhcmFuY2UsIGJvZHkgc2l6ZSwgcmFjZSwgYWdlLCBlY29ub21pYyBiYWNrZ3JvdW5kLCBjb3VudHJ5IG9mIG9yaWdpbiBvciBlbXBsb3ltZW50LCByZWxpZ2lvbiwgYW5kIG90aGVyIGRpZmZlcmVuY2VzLiIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiV2UgcHJhY3RpY2UgIiksX2MoJ3N0cm9uZycsW192bS5fdigiZXF1aXR5IildKSxfdm0uX3YoIi4gRXF1aXR5IHJlY29nbml6ZXMgdGhhdCBldmVyeW9uZSBkb2VzIG5vdCBzdGFydCBmcm9tIHRoZSBzYW1lIHBvc2l0aW9uIGFuZCBzbyB0cmVhdGluZyBldmVyeW9uZSB0aGUgc2FtZSBtYXkgbGVhdmUgdGhlbSBpbiB0aGUgc2FtZSB1bmV2ZW4gcG9zaXRpb25zIHRoZXkgYmVnYW4gaW4uIEZvciB0aGlzIHJlYXNvbiwgd2UgYXJlIGludGVudGlvbmFsIGFib3V0IGFjdGl2ZWx5IHJlZHVjaW5nIHRoZSBpbmVxdWl0YWJsZSBiYXJyaWVycyB0aGF0IHN0YW5kIGJldHdlZW4gdG9vbCBkZXZlbG9wbWVudCBhbmQgdGhvc2Ugd2hvIHVzZSB0aGVtLCBoYWNrIHRoZW0gYW5kIGxlYXJuIGZyb20gdGhlbS4iKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJ3ZS1saXN0ZW4ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiN3ZS1saXN0ZW4ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgV2UgbGlzdGVuLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIldlIGJlZ2luIGludGVyYWN0aW9ucyBieSBhY2tub3dsZWRnaW5nIHRoYXQgd2UgYXJlIHBhcnQgb2YgYSBjb21tdW5pdHkgd2l0aCBjb21wbGVtZW50YXJ5IGdvYWxzLiBXaGVuIHNvbWV0aGluZyBoYXMgaGFwcGVuZWQgYW5kIHNvbWVvbmUgaXMgdW5jb21mb3J0YWJsZSwgb3VyIGZpcnN0IGNob2ljZSBpcyB0byB3b3JrIHRocm91Z2ggaXQgdGhyb3VnaCBkaXNjdXNzaW9uLiBXZSBsaXN0ZW4gdG8gZWFjaCBvdGhlci4iKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiRm9yIGFjdGl2ZSBsaXN0ZW5pbmcsIHdlIGFzayBxdWVzdGlvbnMgZmlyc3QsIGluc3RlYWQgb2YgbWFraW5nIHN0YXRlbWVudHMuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIldlIGdpdmUgcGVvcGxlIHRpbWUgYW5kIHNwYWNlIHRvIHJlc3BvbmQuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIldlIGFwcHJvcHJpYXRlbHkgYWRqdXN0IG91ciBiZWhhdmlvciB3aGVuIGFza2VkIHRvLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJXZSBrbm93IHRoYXQgcmVwZWF0aW5nIGh1cnRmdWwgYmVoYXZpb3IgYWZ0ZXIgaXQgaGFzIGJlZW4gYWRkcmVzc2VkIGlzIGRpc3Jlc3BlY3RmdWwuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIldlIGF2b2lkIHRoaXMgb3Vyc2VsdmVzIGFuZCBoZWxwIG90aGVycyBpZGVudGlmeSB3aGVuIHRoZXkgYXJlIGRvaW5nIGl0LiIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoid2UtcHJhY3RpY2UtY29uc2VudCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3dlLXByYWN0aWNlLWNvbnNlbnQifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgV2UgcHJhY3RpY2UgY29uc2VudC4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJBdCBpbi1wZXJzb24gZXZlbnRzIHN1Y2ggYXMgaGFja2F0aG9ucywgc3ByaW50cyBvciBhbnkgb3RoZXIgc2Vzc2lvbnMsIGV2ZXJ5b25l4oCZcyBwaHlzaWNhbCBzcGFjZSBtdXN0IGJlIHJlc3BlY3RlZCBhdCBhbGwgdGltZXMuIFdlIGRvIG5vdCB0b3VjaCBvdGhlciBwZW9wbGUgd2l0aG91dCBhc2tpbmcgZmlyc3Qg4oCUIHRoaXMgaW5jbHVkZXMgcGh5c2ljYWwgZ3JlZXRpbmdzIHN1Y2ggYXMgaHVncywgaGFuZHNoYWtlcywgb3Iga2lzc2VzLCBzaW5jZSBub3QgZXZlcnlvbmUgaXMgY29tZm9ydGFibGUgd2l0aCB0aGUgc2FtZSB0eXBlIG9mIHRvdWNoLiIpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJBc2sgZmlyc3QuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIldlIHJlc3BlY3QgZXZlcnlvbmUgZWxzZeKAmXMgcmlnaHQgdG8gd2FsayBhd2F5IGF0IGFueSB0aW1lLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJBdCBldmVudHMsIGlmIHlvdSBkbyBub3Qgd2lzaCB0byBiZSBwaG90b2dyYXBoZWQgcGxlYXNlIGFsZXJ0IHBob3RvZ3JhcGhlcnMgdG8gbW92ZSB5b3Ugb3V0IG9mIGZyYW1lLiBJZiB5b3UgYXJlIHRha2luZyBhIHBob3RvZ3JhcGgsIGxldCBwZW9wbGUgaW4gdGhlIHJvb20ga25vdy4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIk5vdGUgdGhhdCBtYW55IGZvcm1zIG9mIGhhcmFzc21lbnQgZG8gbm90IGxvb2sgbGlrZSBwaHlzaWNhbCBvciB2ZXJiYWwgYWJ1c2UsIGJ1dCBzdGlsbCBmYWxsIGludG8gdGhpcyBjYXRlZ29yeS4gTm9uLWNvbnNlbnQgY2FuIGluY2x1ZGUgZXhoaWJpdGluZyBzZXh1YWwgaW1hZ2VzIGluIHB1YmxpYyBzcGFjZXMsIGRlbGliZXJhdGUgaW50aW1pZGF0aW9uLCBzdGFsa2luZywgZm9sbG93aW5nLCBwaG90b2dyYXBoeSBvciByZWNvcmRpbmcgd2l0aG91dCBwZXJtaXNzaW9uLCBzdXN0YWluZWQgZGlzcnVwdGlvbiBvZiB0YWxrcyBvciBjb252ZXJzYXRpb25zLCBpbmFwcHJvcHJpYXRlIHBoeXNpY2FsIGNvbnRhY3QsIGFuZCB1bndlbGNvbWUgc2V4dWFsIGF0dGVudGlvbi4iKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJleGFtcGxlcy1vZi1vbmxpbmUtY29tbXVuaXR5LWJlaGF2aW9yIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZXhhbXBsZXMtb2Ytb25saW5lLWNvbW11bml0eS1iZWhhdmlvciJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBFeGFtcGxlcyBvZiBvbmxpbmUgY29tbXVuaXR5IGJlaGF2aW9yIildKSxfdm0uX3YoIiAiKSxfYygndGFibGUnLFtfYygndGhlYWQnLFtfYygndHInLFtfYygndGgnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEbyIpXSldKSxfdm0uX3YoIiAiKSxfYygndGgnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEb24ndCIpXSldKV0pXSksX3ZtLl92KCIgIiksX2MoJ3Rib2R5JyxbX2MoJ3RyJyxbX2MoJ3RkJyxbX2MoJ3N0cm9uZycsW192bS5fdigiU3RheSBvbiB0b3BpYyIpXSksX3ZtLl92KCIgdG8gbWFrZSBsb25nIHRocmVhZHMgZWFzaWVyIHRvIGZvbGxvdy4iKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkRvIG5vdCBzZW5kIHVubmVjZXNzYXJ5IG9uZS1saW5lIHJlc3BvbnNlcyIpXSksX3ZtLl92KCIgdGhhdCBlZmZlY3RpdmVseSBcInNwYW1cIiBodW5kcmVkcyBvZiBwZW9wbGUgYW5kIGxvd2VyIHRoZSBvdmVyYWxsIGNvbnRlbnQgcXVhbGl0eSBvZiBhIGNvbnZlcnNhdGlvbi4gKEV4Y2VwdGlvbjogZXhwcmVzc2lvbnMgb2YgYXBwcmVjaWF0aW9uIGFuZCBlbmNvdXJhZ2VtZW50ISkiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX2MoJ3N0cm9uZycsW192bS5fdigiU3RhcnQgYSBuZXcgdGhyZWFkIHRvIGhlbHAgb3RoZXJzIGZvbGxvdyBhbG9uZy4iKV0pLF92bS5fdigiIEltcG9ydGFudCBpZiB5b3VyIHJlc3BvbnNlIHN0YXJ0cyB0byBzaWduaWZpY2FudGx5IGRpdmVyZ2UgZnJvbSB0aGUgb3JpZ2luYWwgdG9waWMuIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkRvIG5vdCByZXNwb25kIHdpdGggb2ZmLXRvcGljIGluZm9ybWF0aW9uLCBtYWtpbmcgaXQgaGFyZCBmb3IgdGhlIGxhcmdlIGdyb3VwIG9mIHJlYWRlcnMgdG8gZm9sbG93IGFsb25nLiIpXSldKSxfdm0uX3YoIiAiKSxfYygndHInLFtfYygndGQnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJXcml0ZSBzaG9ydCBhbmQgbGl0ZXJhbCBzdWJqZWN0IGxpbmVzIildKSxfdm0uX3YoIiB0byBoZWxwIHRoZSByZWFkZXJzIG9mIHRoZSBsaXN0IG1hbmFnZSB0aGUgdm9sdW1lIG9mIGNvbW11bmljYXRpb24uIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkh1bW9yIGFuZCBldXBoZW1pc21zIGluIHN1YmplY3QgbGluZXMgYXJlIGVhc2lseSBtaXN1bmRlcnN0b29kLCBhbHRob3VnaCBlbnRodXNpYXNtIGlzIHdlbGNvbWUhIildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIk1pbmQgeW91ciB0b25lLiIpXSksX3ZtLl92KCIgV2UgYXJlIG5vdCBoYXZpbmcgdGhpcyBjb252ZXJzYXRpb24gaW4gcGVyc29uLCBzbyBpdCBpcyBhbGwgdGhlIG1vcmUgaW1wb3J0YW50IHRvIG1haW50YWluIGEgdG9uZSBvZiByZXNwZWN0LiIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJEbyBub3Qgd3JpdGUgaW4gYW4gYWdncmVzc2l2ZSwgZGlzcmVzcGVjdGZ1bCBvciBtb2NraW5nIHRvbmUuIE5vdGU6IHdyaXRpbmcgaW4gYWxsIGNhcHMgaXMgcmVnYXJkZWQgYXMgc2hvdXRpbmcuIildKV0pXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiZXhhbXBsZXMtb2YtaW4tcGVyc29uLWNvbW11bml0eS1iZWhhdmlvciJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2V4YW1wbGVzLW9mLWluLXBlcnNvbi1jb21tdW5pdHktYmVoYXZpb3IifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgRXhhbXBsZXMgb2YgaW4tcGVyc29uIGNvbW11bml0eSBiZWhhdmlvciIpXSksX3ZtLl92KCIgIiksX2MoJ3RhYmxlJyxbX2MoJ3RoZWFkJyxbX2MoJ3RyJyxbX2MoJ3RoJyxbX2MoJ3N0cm9uZycsW192bS5fdigiRG8iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RoJyxbX2MoJ3N0cm9uZycsW192bS5fdigiRG9uJ3QiKV0pXSldKV0pLF92bS5fdigiICIpLF9jKCd0Ym9keScsW19jKCd0cicsW19jKCd0ZCcsW192bS5fdigiQXNrICIpLF9jKCdzdHJvbmcnLFtfdm0uX3YoInBlcm1pc3Npb24gdG8gdGFrZSBwaWN0dXJlcyIpXSksX3ZtLl92KCIgYW5kIHBvc3QgYWJvdXQgb3RoZXJzIG9uIHNvY2lhbCBtZWRpYSAoIiksX2MoJ2VtJyxbX3ZtLl92KCJzZWUgTWVkaWEgQ29uc2VudCwgYmVsb3ciKV0pLF92bS5fdigiKS4iKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdigiRG8gbm90IHVwbG9hZCBwaG90b3MsIHRhZyBvciBtZW50aW9uIG90aGVycyBvbmxpbmUgd2l0aG91dCB0aGVpciBjb25zZW50LiIpXSldKSxfdm0uX3YoIiAiKSxfYygndHInLFtfYygndGQnLFtfdm0uX3YoIlNwZWFrIHlvdXIgb3duIG5hcnJhdGl2ZSwgZnJvbSB5b3VyIG93biB1bmlxdWUgZXhwZXJpZW5jZXMgYW5kIGN1bHR1cmUuIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEbyBub3QgaW1pdGF0ZSB0aGUgY3VsdHVyYWwgZXhwcmVzc2lvbnMgb2YgZ3JvdXBzIildKSxfdm0uX3YoIiB5b3UgYXJlIG5vdCBhIG1lbWJlciBvZiwgb3IgZGlzbWlzcyBwZW9wbGUncyBleHBlcmllbmNlcyBhcyBpbGxlZ2l0aW1hdGUgb3IgbWVyZWx5IHBlcnNvbmFsLiIpXSldKSxfdm0uX3YoIiAiKSxfYygndHInLFtfYygndGQnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJVc2UgYWNjZXNzaWJsZSBsYW5ndWFnZSIpXSksX3ZtLl92KCIgdG8gdGFsayBhYm91dCB5b3VyIGFyZWEgb2YgZXhwZXJ0aXNlLiBJZiBvdGhlcnMgaW4gdGhlIGdyb3VwIHNlZW1lZCBjb25mdXNlZCwgc2xvdyBkb3duOyBzdG9wIGFuZCBhc2sgZm9yIGlucHV0LiIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJEbyBub3QgcHJlc2VudCBpbmZvcm1hdGlvbiBpbiBhIHdheSAvIGxhbmd1YWdlIHRoYXQgbm8gb25lIGVsc2UgaW4gdGhlIHJvb20gY2FuIHVuZGVyc3RhbmQiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX2MoJ3N0cm9uZycsW192bS5fdigiR2l2ZSBldmVyeW9uZSBhIGNoYW5jZSB0byB0YWxrIildKSxfdm0uX3YoIiAsIG9ubHkgaW50ZXJydXB0aW5nIGlmIGFic29sdXRlbHkgbmVjZXNzYXJ5IOKAkyBmb3IgZXhhbXBsZSwgZm9yIENvZGUgb2YgQ29uZHVjdCB2aW9sYXRpb25zIG9yIHRpbWUgdXBkYXRlcy4iKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdigiRG8gbm90IHJlcGVhdGVkbHkgZGlzcnVwdCBhIGRpc2N1c3Npb24uIildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW192bS5fdigiU3RvcCwgbGlzdGVuIGFuZCBhc2sgZm9yIGNsYXJpZmljYXRpb24gaWYgc29tZW9uZSBwZXJjZWl2ZXMgeW91ciBiZWhhdmlvciBvciBwcmVzZW50YXRpb24gYXMgdmlvbGF0aW5nIHRoZSBDb2RlIG9mIENvbmR1Y3QuIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfYygnc3Ryb25nJyxbX3ZtLl92KCJEbyBub3QgaWdub3JlIG9yIGFyZ3VlIG90aGVycycgcmVxdWVzdCB0byBzdG9wIildKSxfdm0uX3YoIiBwb3RlbnRpYWxseSBoYXJtZnVsIGJlaGF2aW9yLCBldmVuIGlmIGl0IHdhcyBhbiBhY2NpZGVudCBvciB5b3UgZG9uJ3QgbWVhbiBpdCBhcyBpdCBpcyBiZWluZyBpbnRlcnByZXRlZC4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJVc2Ugd29yZHMgdGhhdCBhY2N1cmF0ZWx5IGRlc2NyaWJlIHRoZSBzaXR1YXRpb24gcmF0aGVyIHRoYW4gY3VsdHVyYWxseSBvciBzb2NpYWxseSBsb2FkZWQgdGVybXMg4oCTIEZvciBleGFtcGxlLCBcIlRoZSB3aW5kIHdhcyByaWRpY3Vsb3VzbHkgc3Ryb25nIVwiIGluc3RlYWQgb2YgXCJUaGUgd2luZCB3YXMgY3JhenkhXCIiKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkRvIG5vdCB1c2UgZGlzYWJpbGl0eSBhbmQgbWVudGFsL2Vtb3Rpb25hbCBoZWFsdGggdGVybWlub2xvZ3kiKV0pLF92bS5fdigiIHRvIGRlc2NyaWJlIGEgc2l0dWF0aW9uIG1ldGFwaG9yaWNhbGx5LCBldmVuIGlmIGl0IHNlZW1zIG5vcm1hbCB0byB1c2UgaXQuIildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW19jKCdzdHJvbmcnLFtfdm0uX3YoIkFzayIpXSksX3ZtLl92KCIgc29tZW9uZSBiZWZvcmUgeW91IHRvdWNoIHRoZW0sIGV2ZW4gd2hlbiBqb2tpbmcgb3IgZ3JlZXRpbmcsIHVubGVzcyB0aGUgb3RoZXIgcGVyc29uIGhhcyBnaXZlbiB2ZXJiYWwgY29uc2VudC4gSHVncywgY2hlZWsga2lzc2VzLCBhbmQgaGFuZHNoYWtlcyBhcmUgbm9ybWFsIGdyZWV0aW5ncyBpbiBzb21lIGN1bHR1cmVzLCBidXQgbm90IGluIGFsbCBjdWx0dXJlcy4iKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdigiRG8gbm90IGluaXRpYXRlIG9yIHNpbXVsYXRlIHBoeXNpY2FsIGNvbnRhY3Qgd2l0aG91dCBjb25zZW50LCBldmVuIGlmIGl0IHNlZW1zIG5vcm1hbC4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJVc2UgYW4gZXZlbiB0b25lLCByYXRlLCBhbmQgdm9sdW1lIG9mIHZvaWNlIHdoZW4gZGlzYWdyZWVpbmcuICBOb3RlIHRoYXQgZGlmZmVyZW5jZXMgd2lsbCBiZSBjb21tb24sIGFuZCBzb21lIHdpbGwgYmUgaXJyZWNvbmNpbGFibGUgaW4gYSBkaXZlcnNlIG1vdmVtZW50LiIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX2MoJ3N0cm9uZycsW192bS5fdigiRG8gbm90IHZlcmJhbGx5IG9yIHBoeXNpY2FsbHkgYWJ1c2UiKV0pLF92bS5fdigiICwgaGFyYXNzLCB5ZWxsIGF0LCBvciBpbnRpbWlkYXRlIGFueSBhdHRlbmRlZSwgc3BlYWtlciwgdm9sdW50ZWVyLCBvciBleGhpYml0b3IuIildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW192bS5fdigiVXNlIHRoZSAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJwcm9ub3VucyIpXSksX3ZtLl92KCIgcGVvcGxlIGhhdmUgc3BlY2lmaWVkIGZvciB0aGVtc2VsdmVzLiIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJEbyBub3QgcHVycG9zZWx5IG1pc2dlbmRlciBzb21lb25lIChpZSwgcmVmdXNpbmcgdG8gdXNlIHRoZWlyIGNvcnJlY3QgZ2VuZGVyIHByb25vdW5zKS4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJTdGVwIHVwIGFuZCBjb21tZW50IHdoZW4geW91IHNlZSB2aW9sYXRpb25zIG9jY3VyIGJ5IGVtYWlsaW5nICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoibWFpbHRvOm9wZW5oYXJkd2FyZTRtZUBnbWFpbC5jb20ifX0sW192bS5fdigib3BlbmhhcmR3YXJlNG1lQGdtYWlsLmNvbSIpXSldKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkRvIG5vdCBleHBlY3QgdGhhdCBwZW9wbGUgd2hvIGFyZSBzdWJqZWN0IHRvIENvZGUgb2YgQ29uZHVjdCB2aW9sYXRpb25zIGFyZSBjb21mb3J0YWJsZSBvciBhYmxlIHRvIGFkZHJlc3Mgb3IgcmVwb3J0IHRoZW0gdGhlbXNlbHZlcy4iKV0pXSldKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJob3ctdG8tcmVwb3J0LWEtcHJvYmxlbSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2hvdy10by1yZXBvcnQtYS1wcm9ibGVtIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEhvdyBUbyBSZXBvcnQgQSBQcm9ibGVtIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiUmVwb3J0aW5ncyBzaG91bGQgbm90IGJlIGRvbmUgdmlhIHNvY2lhbCBtZWRpYS4iKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJJbiBQZXJzb246IElmIHlvdSBhcmUgYXQgYW4gZXZlbnQgdGhhdCBpcyBwYXJ0IG9mIHRoZSBtZW50b3JzaGlwIHByb2dyYW0sIGZlZWwgZnJlZSB0byBhcHByb2FjaCBhbiBvcmdhbmlzZXIuIildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJWaWEgZW1haWw6IElmIHlvdSBleHBlcmllbmNlIG9yIHdpdG5lc3Mgc29tZXRoaW5nLCB5b3UgY2FuIGFsc28gZW1haWwgdGhlIG9yZ2FuaXplcnMgYXQgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJtYWlsdG86b3BlbmhhcmR3YXJlNG1lQGdtYWlsLmNvbSJ9fSxbX3ZtLl92KCJvcGVuaGFyZHdhcmU0bWVAZ21haWwuY29tIildKV0pXSldKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoibW9kZXJhdGlvbi1wcm9jZXNzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjbW9kZXJhdGlvbi1wcm9jZXNzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIE1vZGVyYXRpb24gcHJvY2VzcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIk9ubGluZSBtb2RlcyBvZiBpbnRlcmFjdGlvbiBpbnZvbHZlIGxhcmdlIG51bWJlcnMgb2YgcGVvcGxlIHdpdGhvdXQgdGhlIGhlbHBmdWwgcHJlc2VuY2Ugb2YgdmlzdWFsIGN1ZXMuIEJlY2F1c2Ugb2YgdGhpcywgcmVzcGVjdGZ1bCBhbmQgc2VsZi1hd2FyZSBvbmxpbmUgY29uZHVjdCBpcyBlc3BlY2lhbGx5IGltcG9ydGFudCBhbmQgZGlmZmljdWx0LiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklmIHNvbWVvbmUgdmlvbGF0ZXMgdGhlc2UgZ3VpZGVsaW5lcywgc29tZW9uZSBmcm9tIHRoZSBvcmdhbml6ZXJzIHRlYW0gd2lsbCBwbGFjZSB0aGVtIGludG8gbW9kZXJhdGlvbiBieSBjaGFuZ2luZyB0aGF0IHBlcnNvbuKAmXMgcGFydGljaXBhdGlvbiBwZXJtaXNzaW9uIG9uIGdyb3VwIGNoYXRzLCBmb3J1bXMgb3Igb3RoZXIgdmlydHVhbCBwbGF0Zm9ybXMuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiT3VyIHRyaXBsZSBub3RpZmljYXRpb24gc3RhbmRhcmQgZm9yIG1vZGVyYXRpb24gbWVhbnMgYSBwb2ludCBwZXJzb24gZnJvbSB0aGUgb3JnYW5pemVycyBncm91cCB3aWxsOiIpXSksX3ZtLl92KCIgIiksX2MoJ29sJyxbX2MoJ2xpJyxbX2MoJ3AnLFtfdm0uX3YoIkVtYWlsIHRoZSBwZXJzb24gZGlyZWN0bHkgd2l0aCBhIGJyaWVmIGV4cGxhbmF0aW9uIG9mIHdoYXQgd2FzIHZpb2xhdGVkLCIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygncCcsW192bS5fdigiU2VuZCBhIHN1bW1hcnkgZW1haWwgdG8gdGhlIHJlc3Qgb2YgdGhlIG1vZGVyYXRvcnMgZ3JvdXAsIildKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdwJyxbX3ZtLl92KCJJZiBpdCBoYXBwZW5lZCBvbiBhIHB1YmxpYyB3YXksIG5vdGlmeSB0aGUgcmVzdCBvZiBwYXJ0aWNpcGFudHMgdGhhdCBvbmUgb2Ygb3VyIG1lbWJlcnMgaGFzIGJlZW4gcGxhY2VkIGludG8gbW9kZXJhdGlvbi4iKV0pXSldKV0pfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}