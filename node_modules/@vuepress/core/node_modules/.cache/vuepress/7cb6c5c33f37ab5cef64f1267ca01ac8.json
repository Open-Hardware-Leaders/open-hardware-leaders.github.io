{"remainingRequest":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/vue-loader/lib/index.js??ref--1-1!/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/andre/repositories/openhardwareleaders/ohlwebsite/docs/05_Projects.md?vue&type=template&id=e19f3814&","dependencies":[{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/docs/05_Projects.md","mtime":1580829446349},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/andre/repositories/openhardwareleaders/ohlwebsite/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}